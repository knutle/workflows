name: laravel package ci dev src

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      php:
        required: true
        type: string
      laravel:
        required: false
        type: string
        default: null

jobs:
  matrix:
    name: Setup matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }} 
    steps:
      - name: Checkout shared workflows repo
        uses: actions/checkout@v3
        with:
            repository: knutle/workflows

      - name: Generate matrix
        id: generate-matrix
        shell: pwsh
        run: "& .github/workflows/generate-matrix.ps1 -OS '${{ toJson(inputs.os) }}' -PHP '${{ toJson(inputs.php) }}' -Laravel '${{ toJson(inputs.laravel) }}'"
  
  tests:
    needs: [ matrix ]
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    
    name: ${{ matrix.title }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-L${{ matrix.laravel }}-TB${{ matrix.testbench }}-P${{ matrix.php }}-${{ hashFiles('composer.json') }}

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Update Laravel dependencies
        if: matrix.laravel != null
        run: |
            composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
            composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction

      - name: Detect installed Laravel version
        if: matrix.laravel != null
        id: laravel_version
        run: |
          echo "::set-output name=LARAVEL_VERSION::$(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")")"
          echo "Installed version $(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")") / Expected version ${{ matrix.laravel }}"

      - name: Fail on incorrect Laravel version
        if: matrix.laravel != null && steps.laravel_version.outputs.LARAVEL_VERSION != matrix.laravel
        run: echo '::error::Incorrect Laravel version installed (${{ steps.laravel_version.outputs.LARAVEL_VERSION }})' && exit 1

      - name: Run test suite
        run: composer run-script test