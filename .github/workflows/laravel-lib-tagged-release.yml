name: laravel package tagged release reference

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      php:
        required: true
        type: string
      laravel:
        required: false
        type: string
        default: null

jobs:
  matrix:
    name: Setup matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }} 
    steps:
      - name: Checkout shared workflows repo
        uses: actions/checkout@v3
        with:
            repository: knutle/workflows

      - name: Generate matrix
        id: generate-matrix
        shell: pwsh
        run: "& .github/workflows/generate-matrix.ps1 -OS '${{ toJson(inputs.os) }}' -PHP '${{ toJson(inputs.php) }}' -Laravel '${{ toJson(inputs.laravel) }}'"
  
  tests:
    needs: [ matrix ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.matrix.outputs.matrix) }}
    
    name: ${{ matrix.title }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ runner.os }}-${{ matrix.laravel }}-testbench-${{ matrix.testbench }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: |
            composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
            composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
            composer update --prefer-dist --no-interaction

      - name: Detect installed Laravel version
        id: laravel_version
        run: |
          echo "::set-output name=LARAVEL_VERSION::$(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")")"
          echo "Installed version $(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")") / Expected version ${{ matrix.laravel }}"

      - name: Detect latest package version
        id: package_version
        run: |
          echo "::set-output name=PACKAGE_VERSION::$(git tag -l --sort=v:refname | tail -1)"
          echo "Package version $(git tag -l --sort=v:refname | tail -1)"

      - name: Fail on incorrect Laravel version
        if: steps.laravel_version.outputs.LARAVEL_VERSION != matrix.laravel
        run: echo '::error::Incorrect Laravel version installed (${{ steps.laravel_version.outputs.LARAVEL_VERSION }})' && exit 1

      - name: Run test suite
        run: composer run-script test

  release:
    needs: [tests]
    env:
      webhook: ${{ secrets.DEPLOY_WEBHOOK }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Promote release candidate if tests pass
        run: |
          current="$(git tag -l --sort=v:refname | tail -1)"

          if [[ $current == v*-rc* ]]; then
            next=$(echo $current | awk '{split($0, items, "-"); n=split(items[1], segments, "."); segments[n]++; for(i in segments) printf segments[i] "."}' | sed "s/\.$//g")

            echo "Promoting $current to $next"

            git config user.name github-actions
            git config user.email github-actions@github.com

            git commit --allow-empty -m "promote release candidate $current to $next"
            git tag $next
            git push
            git push --tags
          else
            echo "Current version does not seem to be a release candidate: $current"
          fi

      - name: Trigger deployment webhook
        if: ${{ env.webhook != '' }}
        run: curl "${{ env.webhook }}"

